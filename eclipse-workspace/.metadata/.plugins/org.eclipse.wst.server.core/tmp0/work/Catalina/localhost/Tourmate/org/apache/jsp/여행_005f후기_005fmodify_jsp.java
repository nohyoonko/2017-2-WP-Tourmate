/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.23
 * Generated at: 2017-12-05 13:25:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import board.*;

public final class 여행_005f후기_005fmodify_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("board");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      board.DAO dao = null;
      dao = (board.DAO) _jspx_page_context.getAttribute("dao", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (dao == null){
        dao = new board.DAO();
        _jspx_page_context.setAttribute("dao", dao, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      board.VO vo1 = null;
      vo1 = (board.VO) _jspx_page_context.getAttribute("vo1", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (vo1 == null){
        vo1 = new board.VO();
        _jspx_page_context.setAttribute("vo1", vo1, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');

	int idx = Integer.parseInt(request.getParameter("idx"));
	int pg = Integer.parseInt(request.getParameter("pg"));
	VO vo = dao.getView(idx);

      out.write("\r\n");
      out.write("\r\n");
      out.write("<script language = \"javascript\">  // 자바 스크립트 시작\r\n");
      out.write("\r\n");
      out.write("function modifyCheck()\r\n");
      out.write("  {\r\n");
      out.write("   var form = document.modifyform;\r\n");
      out.write("   \r\n");
      out.write("   if( !form.password.value )\r\n");
      out.write("   {\r\n");
      out.write("    alert( \"비밀번호를 적어주세요\" );\r\n");
      out.write("    form.password.focus();\r\n");
      out.write("    return;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("  if( !form.title.value )\r\n");
      out.write("   {\r\n");
      out.write("    alert( \"제목을 적어주세요\" );\r\n");
      out.write("    form.title.focus();\r\n");
      out.write("    return;\r\n");
      out.write("   }\r\n");
      out.write(" \r\n");
      out.write("  if( !form.memo.value )\r\n");
      out.write("   {\r\n");
      out.write("    alert( \"내용을 적어주세요\" );\r\n");
      out.write("    form.memo.focus();\r\n");
      out.write("    return;\r\n");
      out.write("   }  \r\n");
      out.write(" \t\tform.submit();\r\n");
      out.write("  } \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write(" <head>\r\n");
      out.write(" <title>투어메이트</title>\r\n");
      out.write(" </head>\r\n");
      out.write(" <body>\r\n");
      out.write(" <!-- 제목+메뉴바를 포함한 Header2.jsp 파일을 include -->\r\n");
      out.write(" ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Header2.jsp", out, false);
      out.write("\r\n");
      out.write(" <br>\r\n");
      out.write(" <center>\r\n");
      out.write("<table>\r\n");
      out.write(" <form name=modifyform method=post action=\"여행_후기_modify_ok.jsp?idx=");
      out.print(idx);
      out.write("&pg=");
      out.print(pg);
      out.write("\">\r\n");
      out.write("  <tr>\r\n");
      out.write("   <td>\r\n");
      out.write("    <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n");
      out.write("     <tr style=\"background:url('2_trip/table_mid.gif') repeat-x; text-align:center;\">\r\n");
      out.write("      <td width=\"5\"><img src=\"2_trip/table_left.gif\" width=\"5\" height=\"30\" /></td>\r\n");
      out.write("      <td>수정</td>\r\n");
      out.write("      <td width=\"5\"><img src=\"2_trip/table_right.gif\" width=\"5\" height=\"30\" /></td>\r\n");
      out.write("     </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("   <table>\r\n");
      out.write("     <tr>\r\n");
      out.write("      <td>&nbsp;</td>\r\n");
      out.write("      <td align=\"center\">제목</td>\r\n");
      out.write("      <td><input type=text name=title size=50  maxlength=50 value=\"");
      out.print(vo.getTitle());
      out.write("\"></td>\r\n");
      out.write("      <td>&nbsp;</td>\r\n");
      out.write("     </tr>\r\n");
      out.write("     <tr height=\"1\" bgcolor=\"#dddddd\"><td colspan=\"4\"></td></tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>&nbsp;</td>\r\n");
      out.write("      <td align=\"center\">이름</td>\r\n");
      out.write("      <td>");
      out.print(vo.getName());
      out.write("<input type=hidden name=name size=50  maxlength=50 value=\"");
      out.print(vo.getName());
      out.write("\"></td>\r\n");
      out.write("      <td>&nbsp;</td>\r\n");
      out.write("     </tr>\r\n");
      out.write("      <tr height=\"1\" bgcolor=\"#dddddd\"><td colspan=\"4\"></td></tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>&nbsp;</td>\r\n");
      out.write("      <td align=\"center\">비밀번호</td>\r\n");
      out.write("      <td><input type=password name=\"password\" id=\"pass\" size=50  maxlength=50 ></td>\r\n");
      out.write("      <td>&nbsp;</td>\r\n");
      out.write("     </tr>\r\n");
      out.write("     <tr height=\"1\" bgcolor=\"#dddddd\"><td colspan=\"4\"></td></tr>\r\n");
      out.write("     <tr>\r\n");
      out.write("      <td>&nbsp;</td>\r\n");
      out.write("      <td align=\"center\">내용</td>\r\n");
      out.write("      <td><textarea name=memo cols=50 rows=13>");
      out.print(vo.getMemo());
      out.write("</textarea></td>\r\n");
      out.write("      <td>&nbsp;</td>\r\n");
      out.write("     </tr>\r\n");
      out.write("     <tr height=\"1\" bgcolor=\"#dddddd\"><td colspan=\"4\"></td></tr>\r\n");
      out.write("     <tr height=\"1\" bgcolor=\"#FF8000\"><td colspan=\"4\"></td></tr>\r\n");
      out.write("     <tr align=\"center\">\r\n");
      out.write("      <td>&nbsp;</td>\r\n");
      out.write("      <td colspan=\"2\"><input type=\"button\" value=\"수정\" OnClick=\"javascript:modifyCheck();\">\r\n");
      out.write("      <input type=button value=\"취소\" OnClick=\"javascript:history.back(-1)\">\r\n");
      out.write("      <td>&nbsp;</td>\r\n");
      out.write("     </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("   \t</td>\r\n");
      out.write("    </tr> \r\n");
      out.write("  </form>\r\n");
      out.write(" </table>\r\n");
      out.write(" </center>\r\n");
      out.write("<br><br>\r\n");
      out.write("\r\n");
      out.write("</body> \r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
