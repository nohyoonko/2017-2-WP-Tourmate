/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.23
 * Generated at: 2017-12-07 14:08:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import board.*;
import java.util.*;

public final class 여행_005f후기_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("board");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      board.DAO dao = null;
      dao = (board.DAO) _jspx_page_context.getAttribute("dao", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (dao == null){
        dao = new board.DAO();
        _jspx_page_context.setAttribute("dao", dao, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");
	
	int total = dao.count();
	ArrayList<VO> alist = dao.getMemberList();
	int size = alist.size();
	int size2 = size;
	
	final int ROWSIZE = 5;
	final int BLOCK = 5;
	int indent = 0;

	int pg = 1;
	
	if(request.getParameter("pg")!=null) {
		pg = Integer.parseInt(request.getParameter("pg"));
	}
	
	int end = (pg*ROWSIZE);
	
	int allPage = 0;

	int startPage = ((pg-1)/BLOCK*BLOCK)+1;
	int endPage = ((pg-1)/BLOCK*BLOCK)+BLOCK;
	
	allPage = (int)Math.ceil(total/(double)ROWSIZE);
	
	if(endPage > allPage) {
		endPage = allPage;
	}
	
	size2 -=end;
	if(size2 < 0) {
		end = size;
	}
	

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write(" <head>\r\n");
      out.write(" <title>투어메이트</title>\r\n");
      out.write(" <style>\r\n");
      out.write("input.space {\r\n");
      out.write(" \tmargin-top:10px;\r\n");
      out.write(" }\r\n");
      out.write(" </style>\r\n");
      out.write(" </head>\r\n");
      out.write(" <body>\r\n");
      out.write(" \r\n");
      out.write("<!-- 제목+메뉴바를 포함한 Header.jsp 파일을 include -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Header.jsp", out, false);
      out.write("\r\n");
      out.write("<br><br>\r\n");
 
	int cnt = 0;
	cnt = dao.count();
	out.print("총 게시물 : " + cnt + "개");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n");
      out.write("  <tr height=\"5\"><td width=\"5\"></td></tr>\r\n");
      out.write(" <tr style=\"background:url('2_trip/table_mid.gif') repeat-x; text-align:left;\">\r\n");
      out.write("   <td width=\"10\"><img src=\"2_trip/table_left.gif\" width=\"5\" height=\"30\" /></td>\r\n");
      out.write("   <td align=\"center\" width=\"70\">번호</td>\r\n");
      out.write("   <td align=\"center\" width=\"300\">제목</td>\r\n");
      out.write("   <td align=\"center\" width=\"80\">작성자</td>\r\n");
      out.write("   <td align=\"center\" width=\"164\">작성일</td>\r\n");
      out.write("   <td align=\"center\" width=\"58\">조회수</td>\r\n");
      out.write("   <td align=\"center\" width=\"7\"><img src=\"2_trip/table_right.gif\" width=\"5\" height=\"30\" /></td>\r\n");
      out.write("  </tr>\r\n");

	if(total==0) {

      out.write("\r\n");
      out.write("\t \t\t<tr align=\"center\" bgcolor=\"#FFFFFF\" height=\"30\">\r\n");
      out.write("\t \t   <td colspan=\"6\">등록된 글이 없습니다.</td>\r\n");
      out.write("\t \t  </tr>\r\n");

	} else {
 		for(int i=ROWSIZE*(pg-1); i<end;i++){
			VO vo = alist.get(i);
			indent = vo.getIndent();
			int idx = vo.getNum();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<tr height=\"25\" align=\"center\">\r\n");
      out.write("\t<td>&nbsp;</td>\r\n");
      out.write("\t<td align=\"center\">");
      out.print(idx );
      out.write("</td>\r\n");
      out.write("\t<td align=\"left\">\r\n");
      out.write("\t");
 
		
	for(int j=0;j<indent;j++){

      out.write("\t\t&nbsp;&nbsp;&nbsp;");

	}

      out.write(" \r\n");
      out.write("\t<a href=\"여행_후기_view.jsp?idx=");
      out.print(idx);
      out.write("&pg=");
      out.print(pg);
      out.write('"');
      out.write('>');
      out.print(vo.getTitle() );
      out.write("</a>\r\n");
      out.write("\t</td>\r\n");
      out.write("   <td align=\"center\">");
      out.print(vo.getName());
      out.write("</td>\r\n");
      out.write("   <td align=\"center\">");
      out.print(vo.getTime() );
      out.write("</td>\r\n");
      out.write("   <td align=\"center\">");
      out.print(vo.getHit() );
      out.write("</td>\r\n");
      out.write("\t<td>&nbsp;</td>\r\n");
      out.write("</tr>\r\n");
      out.write("  <tr height=\"1\" bgcolor=\"#D2D2D2\"><td colspan=\"6\"></td></tr>\r\n");
 
		}
	} 

      out.write("\r\n");
      out.write("\r\n");
      out.write(" <tr height=\"1\" bgcolor=\"#FF8000\"><td colspan=\"6\" width=\"752\"></td></tr>\r\n");
      out.write(" </table>\r\n");
      out.write(" \r\n");
      out.write("<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n");
      out.write("  <tr><td colspan=\"4\" height=\"5\"></td></tr>\r\n");
      out.write("  <tr>\r\n");
      out.write("  \t<td align=\"center\">\r\n");
      out.write("\t\t");

			if(pg>BLOCK) {
		
      out.write("\r\n");
      out.write("\t\t\t[<a href=\"여행_후기.jsp?pg=1\">◀◀</a>]\r\n");
      out.write("\t\t\t[<a href=\"여행_후기.jsp?pg=");
      out.print(startPage-1);
      out.write("\">◀</a>]\r\n");
      out.write("\t\t");

			}
		
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");

			for(int i=startPage; i<= endPage; i++){
				if(i==pg){
		
      out.write("\r\n");
      out.write("\t\t\t\t\t<u><b>[");
      out.print(i );
      out.write("]</b></u>\r\n");
      out.write("\t\t");

				}else{
		
      out.write("\r\n");
      out.write("\t\t\t\t\t[<a href=\"여행_후기.jsp?pg=");
      out.print(i );
      out.write('"');
      out.write('>');
      out.print(i );
      out.write("</a>]\r\n");
      out.write("\t\t");

				}
			}
		
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");

			if(endPage<allPage){
		
      out.write("\r\n");
      out.write("\t\t\t[<a href=\"여행_후기.jsp?pg=");
      out.print(endPage+1);
      out.write("\">▶</a>]\r\n");
      out.write("\t\t\t[<a href=\"여행_후기.jsp?pg=");
      out.print(allPage);
      out.write("\">▶▶</a>]\r\n");
      out.write("\t\t");

			}
		
      out.write("\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t  <tr align=\"center\">\r\n");
      out.write("   <br>\r\n");
      out.write("   <td><input class=\"space\" type=\"button\" value=\"글쓰기\" OnClick=\"window.location='여행_후기_write.jsp'\"></td>\r\n");
      out.write("  </tr>\r\n");
      out.write("</table>\r\n");
      out.write("<br><br><br>\r\n");
      out.write("</body> \r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
